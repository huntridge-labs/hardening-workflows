name: Semgrep/OpenGrep Scanner

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      post_pr_comment:
        description: 'Whether to post PR comments'
        required: false
        type: boolean
        default: true
      enable_code_security:
        description: 'Whether GitHub Code Security is enabled for this repository'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  security-events: write
  actions: read
  pull-requests: write

env:
  PYTHON_VERSION: '3.12'

jobs:
  opengrep-analysis:
    name: OpenGrep SAST
    runs-on: ubuntu-latest
    timeout-minutes: 20
    continue-on-error: true

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install OpenGrep/Semgrep
      run: |
        python -m pip install --upgrade pip
        pip install semgrep

    - name: Run OpenGrep/Semgrep Security Analysis
      run: |
        echo "🔍 Running Semgrep comprehensive security analysis..."
        mkdir -p opengrep-reports
        semgrep --config=auto --sarif --output=opengrep-reports/opengrep.sarif . || true
        semgrep --config=auto --json --output=opengrep-reports/opengrep.json . || true
        semgrep --config=auto --text --output=opengrep-reports/opengrep.txt . || true

        cp opengrep-reports/* . 2>/dev/null || true
      continue-on-error: true

    - name: Upload OpenGrep artifacts
      uses: actions/upload-artifact@v4
      with:
        name: opengrep-reports
        path: |
          opengrep.json
          opengrep.txt
          opengrep-reports/
        retention-days: 30
      if: always()

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: opengrep.sarif
      if: inputs.enable_code_security == true && always() && github.actor != 'nektos/act' && hashFiles('opengrep.sarif') != ''
      continue-on-error: true
