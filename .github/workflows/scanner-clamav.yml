name: ClamAV Malware Scanner

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      post_pr_comment:
        description: 'Whether to post PR comments'
        required: false
        type: boolean
        default: true
      enable_code_security:
        description: 'Whether GitHub Code Security is enabled for this repository'
        required: false
        type: boolean
        default: false
      scan_path:
        description: 'Path to scan (file, directory, or archive). Defaults to repository root.'
        required: false
        type: string
        default: '.'

permissions:
  contents: read
  security-events: write
  actions: read
  pull-requests: write

jobs:
  malware-detection:
    name: Malware Detection - ClamAV
    runs-on: ubuntu-latest
    timeout-minutes: 30
    continue-on-error: true

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Install ClamAV
      run: |
        echo "üîß Installing ClamAV..."
        sudo apt-get update
        sudo apt-get install -y clamav clamav-daemon
        sudo systemctl stop clamav-daemon  # Stop the daemon to avoid conflicts
        sudo freshclam  # Update virus definitions
      continue-on-error: true

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.12'

    - name: Install Python dependencies
      run: |
        echo "üì¶ Installing Python dependencies..."
        pip install rarfile  # Optional dependency for RAR files
      continue-on-error: true

    - name: Run ClamAV Malware Scan
      run: |
        echo "üîç Running ClamAV malware analysis..."
        mkdir -p clamav-reports

        # Run the ClamAV scanner script
        python .github/scripts/clamav-scanner.py "${{ inputs.scan_path }}" \
          --json-report clamav-reports/clamav-report.json \
          --text-report clamav-reports/clamav-report.txt

        echo "Generated ClamAV files:"
        ls -la clamav-reports/ || echo "No files generated"
      continue-on-error: true

    - name: Upload ClamAV artifacts
      uses: actions/upload-artifact@v4
      with:
        name: clamav-reports
        path: clamav-reports/
        retention-days: 30
      if: always()

    - name: Generate ClamAV summary section
      if: always()
      run: |
        mkdir -p scanner-summaries

        echo "<details>" > scanner-summaries/clamav.md
        echo "<summary>üõ°Ô∏è ClamAV</summary>" >> scanner-summaries/clamav.md
        echo "" >> scanner-summaries/clamav.md

        if [ -d "clamav-reports" ] && [ "$(ls -A clamav-reports)" ]; then
          echo "**Status:** ‚úÖ Completed" >> scanner-summaries/clamav.md
          echo "" >> scanner-summaries/clamav.md

          # Parse results from JSON report
          if [ -f "clamav-reports/clamav-report.json" ] && command -v jq >/dev/null 2>&1; then
            INFECTED_COUNT=$(jq -r '.infected_files // 0' clamav-reports/clamav-report.json 2>/dev/null || echo "0")
            SCANNED_COUNT=$(jq -r '.total_files // 0' clamav-reports/clamav-report.json 2>/dev/null || echo "0")
            ERROR_COUNT=$(jq -r '.error_files // 0' clamav-reports/clamav-report.json 2>/dev/null || echo "0")
          else
            # Fallback to text report parsing
            INFECTED_COUNT=0
            SCANNED_COUNT=0
            ERROR_COUNT=0

            if [ -f "clamav-reports/clamav-report.txt" ]; then
              INFECTED_COUNT=$(grep -c "infected\|FOUND" clamav-reports/clamav-report.txt 2>/dev/null || echo "0")
              SCANNED_COUNT=$(grep "Files scanned:" clamav-reports/clamav-report.txt | sed 's/.*: //' 2>/dev/null || echo "0")
              ERROR_COUNT=$(grep -c "error\|Error" clamav-reports/clamav-report.txt 2>/dev/null || echo "0")
            fi
          fi

          echo "**Files Scanned:** $SCANNED_COUNT" >> scanner-summaries/clamav.md
          echo "**Infected Files:** $INFECTED_COUNT" >> scanner-summaries/clamav.md
          echo "**Scan Errors:** $ERROR_COUNT" >> scanner-summaries/clamav.md
          echo "" >> scanner-summaries/clamav.md

          if [ "$INFECTED_COUNT" -gt 0 ]; then
            echo "üö® **WARNING:** Malware detected in your repository!" >> scanner-summaries/clamav.md
            echo "" >> scanner-summaries/clamav.md

            # List infections if available
            if [ -f "clamav-reports/clamav-report.json" ] && command -v jq >/dev/null 2>&1; then
              echo "**Detected Infections:**" >> scanner-summaries/clamav.md
              jq -r '.results[]? | select(.status == "infected") | "- \(.file): \(.infection // "Unknown")"' clamav-reports/clamav-report.json 2>/dev/null >> scanner-summaries/clamav.md || true
              echo "" >> scanner-summaries/clamav.md
            fi
          fi

          echo "**üìÅ Artifacts:** [ClamAV Reports](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts)" >> scanner-summaries/clamav.md
        else
          echo "**Status:** ‚è≠Ô∏è Skipped" >> scanner-summaries/clamav.md
        fi

        echo "" >> scanner-summaries/clamav.md
        echo "</details>" >> scanner-summaries/clamav.md
        echo "" >> scanner-summaries/clamav.md
      continue-on-error: true

    - name: Upload ClamAV summary section
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: scanner-summary-clamav
        path: scanner-summaries/clamav.md
        retention-days: 7
      continue-on-error: true
